
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Replace `$search` with `$replace` in `$string`
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}


// General variable structure
//
// Variable format should follow the `$component-modifier-state-property` order.


// Colors
//
// Grayscale and brand colors for use across Bootstrap.

// Start with assigning color names to specific hex values.
$white:  #fff !default;
$black:  #000 !default;
$black-dark: #1d1d1d !default;

// Create grayscale
$gray-darker:               #121212 !default;
$gray-dark:                 #191919 !default;
$gray:                      #898989 !default;
$gray-light:                #a7a7a7 !default;
$gray-lighter:              #e0e1e2 !default;
$gray-lightest:             #f7f7f9 !default;

// Reassign color vars to semantic color scheme
$brand:                     #81ba9d !default;
$brand-2:                   #000 !default;
$brand-night:               #c4b977 !default;

// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-rounded:            true !default;
$enable-shadows:            false !default;
$enable-gradients:          false !default;
$enable-transitions:        true !default;
$enable-hover-media-query:  false !default;
$enable-grid-classes:       true !default;
$enable-print-styles:       true !default;


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer:   1rem !default;
$spacer-x: $spacer !default;
$spacer-y: $spacer !default;
$spacers: (
  0: (
    x: 0,
    y: 0
  ),
  1: (
    x: ($spacer-x * .25),
    y: ($spacer-y * .25)
  ),
  2: (
    x: ($spacer-x * .5),
    y: ($spacer-y * .5)
  ),
  3: (
    x: $spacer-x,
    y: $spacer-y
  ),
  4: (
    x: ($spacer-x * 1.5),
    y: ($spacer-y * 1.5)
  ),
  5: (
    x: ($spacer-x * 3),
    y: ($spacer-y * 3)
  )
) !default;
$border-width: 1px !default;

// This variable affects the `.h-*` and `.w-*` classes.
$sizes: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%
) !default;

// Body
//
// Settings for the `<body>` element.

$body-bg:       $white !default;
$body-color:    #232323 !default;


// Links
//
// Style anchor elements.

$link-color:            $brand !default;
$link-decoration:       none !default;
$link-hover-color:      $link-color !default;
$link-hover-decoration: none !default;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1280px,
  xxl: 1366px,
  xxxl: 1440px
) !default;
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  // sm: 540px,
  // md: 720px,
  // lg: 960px,
  //xl: 1280px,
  //xxl: 1366px,
  xxxl: 1440
) !default;
@include _assert-ascending($container-max-widths, "$container-max-widths");


// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:               12 !default;
$grid-gutter-width-base:     30px !default;
$grid-gutter-widths: (
  xs: $grid-gutter-width-base,
  sm: $grid-gutter-width-base,
  md: $grid-gutter-width-base,
  lg: $grid-gutter-width-base,
  xl: $grid-gutter-width-base,
  xxl: $grid-gutter-width-base,
  xxxl: $grid-gutter-width-base
) !default;

// Fonts
//
// Font, line-height, and color for body text, headings, and more.
$font-montserrat:                 'montserratregular', sans-serif;
$font-montserrat-light:           'montserratlight', sans-serif;
$font-montserrat-medium:          'montserratmedium', sans-serif;
$font-family-base:                $font-montserrat-medium;

$font-weight-normal: normal !default;
$font-weight-bold: bold !default;
$font-size-base: 1.6rem !default;
$line-height-base: 1.25 !default;

$font-size-h1: 5rem !default;
$font-size-h2: 4.5rem !default;
$font-size-h3: 4rem !default;
$font-size-h4: 2.7rem !default;
$font-size-h5: 2.4rem !default;
$font-size-h6: 1.8rem !default;

$headings-color:         $brand !default;
$headings-font-family:   $font-montserrat-medium !default;
$headings-font-weight:   normal !default;
$headings-line-height:   1 !default;
$headings-margin-bottom: 20px !default;

$small-font-size: 80% !default;

$hr-border-width: 1px !default;
$hr-border-color: $gray !default;

$list-inline-padding: 10px !default;

$page-w-outer: 1380;
$sidebar: 74;
$page-w-inner: 1380 - ($sidebar*2);
$page-h: 780;

// Form
$form-input-color:                #1d1d1d;
$form-input-placeholder-color:    $form-input-color;
$form-input-font-family:          $font-family-base;
$form-input-font-size:            1em;
$form-input-line-height:          normal;
$form-input-height:               100%;
$form-input-border:               0;
$form-input-radius:               0;
$form-input-bg-color:             transparent;
$form-input-padding-x:            1.76471em;
$form-input-padding-y:            0;

$form-select-placeholder-color:   transparent;
$form-select-font-size:           1em;
$form-select-padding:             0 $form-input-padding-x 0;
$form-select-line-height:         1;
$form-select-arrow-color:         #606060;
$form-select-arrow-width:         12px;
$form-select-arrow-height:        10px;

$form-dropdown-height:            35px;
$form-dropdown-color:             $form-input-color;
$form-dropdown-font-size:         $form-input-font-size;
$form-dropdown-line-height:       1;
$form-dropdown-text-transform:    none;
$form-dropdown-letter-spacing:    normal;
$form-dropdown-padding:           11px $form-input-padding-x 4px;
$form-dropdown-bg-color:          $white;
$form-dropdown-border:            $form-input-border;
$form-dropdown-radius:            $form-input-radius;
$form-dropdown-selected-color:    $white;
$form-dropdown-selected-bg-color: $brand;


$border-radius:          .25rem !default;
$border-radius-lg:       .3rem !default;
$border-radius-sm:       .2rem !default;

$transition-base:        all .2s ease-in-out !default;
$transition-fade:        opacity .15s linear !default;
$transition-collapse:    height .35s ease !default;

// Easing
// -------------------------

$linear:         cubic-bezier(0.250, 0.250, 0.750, 0.750);
$easeInQuad:     cubic-bezier(0.550, 0.085, 0.680, 0.530);
$easeInCubic:    cubic-bezier(0.550, 0.055, 0.675, 0.190);
$easeInQuart:    cubic-bezier(0.895, 0.030, 0.685, 0.220);
$easeInQuint:    cubic-bezier(0.755, 0.050, 0.855, 0.060);
$easeInSine:     cubic-bezier(0.470, 0.000, 0.745, 0.715);
$easeInExpo:     cubic-bezier(0.950, 0.050, 0.795, 0.035);
$easeInCirc:     cubic-bezier(0.600, 0.040, 0.980, 0.335);
$easeInBack:     cubic-bezier(0.600, 0, 0.735, 0.045);

$easeOutQuad:    cubic-bezier(0.250, 0.460, 0.450, 0.940);
$easeOutCubic:   cubic-bezier(0.215, 0.610, 0.355, 1.000);
$easeOutQuart:   cubic-bezier(0.165, 0.840, 0.440, 1.000);
$easeOutQuint:   cubic-bezier(0.230, 1.000, 0.320, 1.000);
$easeOutSine:    cubic-bezier(0.390, 0.575, 0.565, 1.000);
$easeOutExpo:    cubic-bezier(0.190, 1.000, 0.220, 1.000);
$easeOutCirc:    cubic-bezier(0.075, 0.820, 0.165, 1.000);
$easeOutBack:    cubic-bezier(0.175, 0.885, 0.320, 1);

$easeInOutQuad:  cubic-bezier(0.455, 0.030, 0.515, 0.955);
$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1.000);
$easeInOutQuart: cubic-bezier(0.770, 0.000, 0.175, 1.000);
$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000);
$easeInOutSine:  cubic-bezier(0.445, 0.050, 0.550, 0.950);
$easeInOutExpo:  cubic-bezier(1.000, 0.000, 0.000, 1.000);
$easeInOutCirc:  cubic-bezier(0.785, 0.135, 0.150, 0.860);
$easeInOutBack:  cubic-bezier(0.680, 0, 0.265, 1);
